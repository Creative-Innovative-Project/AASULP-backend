"""Initial Migration

Revision ID: 8ddd883e2289
Revises: 
Create Date: 2025-04-01 17:41:19.559031

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ddd883e2289'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('edition', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('book_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('cgpa', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('quiz',
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('Pending', 'Completed', name='quiz_status'), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('quiz_id')
    )
    op.create_table('semester',
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('semester_id')
    )
    op.create_table('course',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('credit', sa.Integer(), nullable=True),
    sa.Column('periods', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('Active', 'Completed', 'Dropped', name='course_status'), nullable=True),
    sa.Column('mark', sa.Float(), nullable=True),
    sa.Column('attendance', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('semester_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.semester_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('questions',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('options', sa.String(), nullable=True),
    sa.Column('correct_answer', sa.String(), nullable=True),
    sa.Column('chosen_answer', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.quiz_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('exam',
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('Assesment 1', 'Assesment 2', 'End Semester', name='exam_type'), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('Scheduled', 'Completed', name='exam_status'), nullable=True),
    sa.Column('mark', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('exam_id')
    )
    op.create_table('week',
    sa.Column('week_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('Ongoing', 'Completed', name='weekly_status'), nullable=True),
    sa.Column('attendance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.quiz_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('week_id')
    )
    op.create_table('topic',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('resources', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('Pending', 'Completed', name='topic_status'), nullable=True),
    sa.Column('week_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['week_id'], ['week.week_id'], ),
    sa.PrimaryKeyConstraint('topic_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('topic')
    op.drop_table('week')
    op.drop_table('exam')
    op.drop_table('questions')
    op.drop_table('course')
    op.drop_table('semester')
    op.drop_table('quiz')
    op.drop_table('user')
    op.drop_table('book')
    # ### end Alembic commands ###
